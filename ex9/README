jenia90
320884216
Yevgeni Dysin

ben_f
208482604
Ben Faingold

===============================
=  README for ex9: Asteroids  =
===============================

===================
=  Websites used  =
===================

https://docs.python.org/3/library/random.html

============
=  Usage   =
============

To run this game, enter the following command in the command line:
python3 asteroids_main.py <asteroids_amount>

The game uses the TkInter GUI package. The ship, asteroids and even torpedos
are represented by turtles from the turtle module.

==================
=  Description   =
==================

Simple asteroids game where the player controls a ship in a field of asteroids.
The main objective of the game is to shoot the asteroids while trying to avoid
collisions with them. When a torpedo hits one of the asteroids it splits it
into smaller ones.

=============================
=  List of submitted files  =
=============================

README		        This file
AUTHORS             Contains list of people who worked on the exercise
asteroid.py         Contains the Asteroid object class implementation
asteroids_main.py   Contains the main game logic
ship.py             Contains the Ship object class implementation
torpedo.py          Contains the Torpedo object class implementation

======================
=  Special Comments  =
======================

The 3 considerations we've had while working on this game were:
1) Some operations like adding, removing objects, generating random position
   and exiting the game due to 3 different cases (all of these required more
   than one line of code) were written as functions to simplify the code and
   shorten it. The alternative was to write these same lines of code multiple
   times throughout the file asteroids_main.py, which could be cumbersome.
2) Inside the loop where we check for asteroid-torpedo intersections we were
   contemplating whether to 'break' or 'continue' the loop when the asteroid
   was at its smallest size (right before the code for splitting it into 2 new
   ones). Ultimately we chose to use 'break' because there's no need to
   continue the loop to check the intersection for a removed asteroid.
3) We had 2 separate loops for torpedo iterations: First one inside the loop
   for asteroid iterations (to check for intersections), and then another one
   outside of it (to update torpedo parameters). The reason for this separation
   is not only for clarity, but also to avoid having multiple torpedo updates
   during one frame in addition to 2 removals of a torpedo in one scope due to
   2 different reasons.